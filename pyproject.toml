[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=50",
  "setuptools_scm>=6",
  "wheel>=0.34",
]

[project]
name = "xrtpy"
readme = "README.md"
keywords = ["solar physics"]
description = "For analyzing data from the X-Ray Telescope (XRT) on the Hinode spacecraft."
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
]
# SPEC 0 recommends that packages in the scientific pythoniverse support
# versions of Python that have been released in the last â‰¤36 months
requires-python = ">=3.9"
dynamic = ["version"]
authors = [
  {name = "Joy Velasquez", email = "joy.velasquez@cfa.harvard.edu"},
  {name = "Jonathan Slavin", email = "jslavin@cfa.harvard.edu"},
  {name = "Nick Murpy", email="namurphy@cfa.harvard.edu"},
  {name = "Will Barnes"},
  {name = "Stuart Mumford"},
]

dependencies = [
  "astropy >= 5.1",
  "cached-property >= 1.5.2",
  "matplotlib >= 3.5.0",
  "numpy >= 1.24.0",
  "requests >= 2.28.0",
  "scikit-image >= 0.19.0",
  "scipy >= 1.8.0",
  # install setuptools to get pkg_resources
  "setuptools; python_version >= '3.12'",
  "sunpy[map] >= 4.0.0",
]

[project.optional-dependencies]
dev = [
  "nox >= 2022.8.7",
  "pre-commit >= 3.6.0",
]
tests = [
  "pytest >= 8.0.0",
  "pytest-allclose >= 1.0.0",
  "pytest-xdist >= 3.6.1",
]
docs = [
  "docutils >= 0.19",
  "imageio >= 2.20.0",
  "ipykernel >= 6.20.0",
  "ipython >= 8.4.0",
  "ipywidgets >= 8.1.0",
  "jinja2 != 3.1, >= 3.0.0",
  "nbconvert >= 7.7.0, < 7.14",
  "nbsphinx >= 0.9",
  "numpydoc >= 1.5.0",
  "pillow >= 9.1.0",
  "pygments >= 2.12.0",
  "sphinx >= 7.3.0",
  "sphinx-changelog >= 1.5.0",
  "sphinx-codeautolink >= 0.15.2",
  "sphinx-copybutton >= 0.5.2",
  "sphinx-gallery >= 0.16.0",
  "sphinx-hoverxref >= 1.4.0",
  "sphinx-issues >= 4.1.0",
  "sphinx_automodapi >= 0.17.0",
  "sphinx_rtd_theme >= 2.0.0",
  "sphinxcontrib-bibtex >= 2.6.2",
  "sunpy[net] >= 4.0.0",
  "towncrier >= 23.11.0",
]

[project.urls]
Documentation = "https://xrtpy.readthedocs.io"
Repository = "https://github.com/HinodeXRT/xrtpy"
Issues = "https://github.com/HinodeXRT/xrtpy/issues"
Changelog = "https://xrtpy.readthedocs.io/en/stable/changelog/index.html"

[tool.ruff]
target-version = "py39"
show-fixes = true
extend-exclude = [
  ".jupyter",
  "__pycache__",
  "_build",
  "_dev",
]
namespace-packages = [".github/workflows", "docs"]

[tool.ruff.lint]
# Find info about ruff rules at: https://docs.astral.sh/ruff/rules
extend-select = [
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM818", # trailing-comma-on-bare-tuple
  "FBT003", # flake8-boolean-trap
  "FLY", # flynt
  "I", # isort
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "N", # pep8-naming
  "NPY", # numpy-deprecated-type-alias
  "PD", # pandas-vet
  "PERF", # perflint
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PLC", # pylint convention
  "PLE", # pylint errors
  "PLW", # pylint warnings
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RSE", # flake8-raise
  "RUF005",# collection-literal-concatenation
  "RUF006", # asyncio-dangling-task
  "RUF007", # pairwise-over-zipped
  "RUF008", # mutable-dataclass-default
  "RUF009", # function-call-in-dataclass-default-argument
  "RUF010", # explicit-f-string-type-conversion
  "RUF013", # implicit-optional
  "RUF015", # unnecessary-iterable-allocation-for-first-element
  "RUF016", # invalid-index-type
  "RUF100", # unused-noqa
  "RUF200", # invalid-pyproject-toml
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W", # pycodestyle warnings
]
ignore = [
  "E501", # line-too-long
  "ISC001", # single-line-implicit-string-concatenation (formatter conflict)
  "N802", # invalid-function-name
  "N803", # invalid-argument-name
  "N806", # non-lowercase-variable-in-function
  "N816", # mixed-case-variable-in-global-scope
  "PLC2401", # non-ascii-name
  "S101", # asserts
  "SIM108", # if-else-block-instead-of-if-exp
  "TRY003", # raise-vanilla-args
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F402", "F403"]  # ignore import errors
"docs/notebooks/computing_functions/temperature_response.ipynb" = ["A001"]  # filter variable shadows Python builtin

[tool.ruff.lint.flake8-import-conventions.aliases]
"astropy.units" = "u"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.codespell]
skip = "*.genx,*.geny,*.png,*egg*,.git,.hypothesis,.nox,.tox,.idea,__pycache__,_build"
ignore-words-list = """
4rd,
bu,
circularly,
egde,
fo,
nd,
ons,
sav,
te,
tne,
ue,
aas
"""

[tool.pytest.ini_options]
testpaths = ['xrtpy', 'docs']
xfail_strict = true
doctest_optionflags = """
NORMALIZE_WHITESPACE
ELLIPSIS
NUMBER
IGNORE_EXCEPTION_DETAIL"""
norecursedirs = [
  'build',
  'docs/_build',
  'examples',
  'auto_examples',
]
addopts = [
  '--doctest-modules',
  '--doctest-continue-on-failure',
  '--ignore=docs/conf.py',
]

[tool.setuptools]
packages = ["xrtpy"]

[tool.setuptools.package-data]
"xrtpy" = ["data/*"]
"xrtpy.response" = ["data/*.txt", "data/*.geny"]
"xrtpy.response.tests" = ["data/*/*/*.txt"]

[tool.setuptools_scm]
write_to = "xrtpy/version.py"

[tool.towncrier]
package = "xrtpy"
name = "XRTpy"
filename = "CHANGELOG.rst"
directory = "changelog/"
title_format = "{name} v{version} ({project_date})"
issue_format = ":pr:`{issue}`"  # Despite the name mismatch, we use this for linking to PRs
wrap = true

[[tool.towncrier.type]]
directory = "breaking"
name = "Backwards Incompatible Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "trivial"
name = "Trivial/Internal Changes"
showcontent = true

[tool.gilesbot]

[tool.gilesbot.pull_requests]
enabled = true
