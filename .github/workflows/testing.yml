name: CI

on:
  push:
    branches:
    - main
    - stable
  pull_request:
  workflow_dispatch:

jobs:

  initial-tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Python 3.8 (Windows)
          os: windows-latest
          python: 3.8
          noxenv: tests-3.8

        - name: Python 3.9 (MacOS X)
          os: ubuntu-latest
          python: 3.9
          noxenv: tests-3.9

        - name: Python 3.10
          noxenv: tests-3.10
          noxposargs: --durations=10

        - name: Linters
          noxenv: linters

        - name: Codespell
          noxenv: codespell

        - name: Import package
          noxenv: import_package

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install nox
      run: python -m pip install --progress-bar off --upgrade nox

    - name: ${{ matrix.name }}
      run: nox -s ${{ matrix.noxenv }} -- ${{ matrix.noxposargs }}

  documentation:

    name: Documentation
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install nox
      run: python -m pip install --progress-bar off --upgrade nox

    - name: Install language-pack-fr and tzdata
      run: sudo apt-get install graphviz pandoc

    - name: Build documentation
      run: nox -e build_docs -- -q

  build-n-publish:
    name: Packaging
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    needs:
    - comprehensive-tests
    - documentation

    steps:
    - uses: actions/checkout@v3

    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install requirements
      run: |
        pip install --progress-bar off --upgrade pip
        pip install --progress-bar off setuptools numpy wheel setuptools_scm twine

    - name: Build a binary wheel
      run: python setup.py bdist_wheel

    - name: Build a source tarball
      run: python setup.py sdist

    - name: Twine check
      run: twine check dist/*

    - name: Install package in all variants
      run: |
        pip install --progress-bar off .[all,dev]
        pip install --progress-bar off -e .[all,dev]
        python setup.py develop

    - name: Publish distribution, if tagged, ðŸ“¦ to PyPI
      if: ${{ startsWith(github.ref, 'refs/tags') && !endsWith(github.ref, 'dev') }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_access_token }}
