name: CI

on:
  push:
    branches:
    - main
    - stable
    - v*.*.*
    tags:
    - v*
  pull_request:
  workflow_dispatch:

jobs:

  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Tests, Python 3.12, Windows
          os: windows-latest
          noxenv: tests-3.12
          python: '3.12'
          noxposargs: --durations=10

        - name: Tests, Python 3.11, Windows
          os: windows-latest
          noxenv: tests-3.11
          python: '3.11'
          noxposargs: --durations=10

        - name: Tests, Python 3.10, macOS
          os: macos-latest
          noxenv: tests-3.10
          python: '3.10'

        - name: Tests, Python 3.9, Windows
          os: windows-latest
          python: 3.9
          noxenv: tests-3.9

        - name: Import XRTpy, Python 3.9, Windows
          os: windows-latest
          python: 3.9
          noxenv: import_package

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Install nox
      run: python -m pip install --progress-bar off --upgrade nox

    - name: ${{ matrix.name }}
      run: nox -s ${{ matrix.noxenv }} -- ${{ matrix.noxposargs }}

  documentation:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Documentation
          python: '3.12'

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install nox
      run: python -m pip install --progress-bar off --upgrade nox

    - name: Install graphviz
      run: sudo apt install graphviz

    - name: Install pandoc
      run: |
        PANDOC_VERSION="3.1.11.1"
        wget -q https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-1-amd64.deb
        sudo dpkg -i pandoc-${PANDOC_VERSION}-1-amd64.deb
        rm pandoc-${PANDOC_VERSION}-1-amd64.deb
        pandoc --version

    - name: Build documentation
      run: nox -s build_docs_nitpicky -- -q
